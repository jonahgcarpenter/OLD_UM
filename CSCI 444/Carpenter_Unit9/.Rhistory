# Load necessary libraries
library(reshape2)
library(tibble)
library(ggplot2)
# Load french_fries data (assuming it is already available in the environment)
data(french_fries)
# Create tibble from french_fries data frame
ff <- as_tibble(french_fries)
# Pivot the data longer (from wide format to long format)
ff_long <- pivot_longer(ff, cols = potato:painty, names_to = "category", values_to = "amount")
# Load necessary libraries
library(tidyr)
library(tibble)
library(ggplot2)
# Load french_fries data (assuming it is already available in the environment)
data(french_fries)
# Create tibble from french_fries data frame
ff <- as_tibble(french_fries)
# Pivot the data longer (from wide format to long format)
ff_long <- pivot_longer(ff, cols = potato:painty, names_to = "category", values_to = "amount")
# Group by category and calculate means, removing NA values
ff_summary <- ff_long %>%
group_by(category) %>%
summarize(mean_amount = mean(amount, na.rm = TRUE))
# Load necessary libraries
library(tidyr)
library(tibble)
library(ggplot2)
library(dplyr)
# Load french_fries data (assuming it is already available in the environment)
data(french_fries)
# Create tibble from french_fries data frame
ff <- as_tibble(french_fries)
# Pivot the data longer (from wide format to long format)
ff_long <- pivot_longer(ff, cols = potato:painty, names_to = "category", values_to = "amount")
# Group by category and calculate means, removing NA values
ff_summary <- ff_long %>%
group_by(category) %>%
summarize(mean_amount = mean(amount, na.rm = TRUE))
# Create a color vector for 5 categories
color_vector <- c("red", "blue", "green", "purple", "orange")
# Plot column chart without the legend, center title, and flip coordinates
ggplot(ff_summary, aes(x = reorder(category, -mean_amount), y = mean_amount, fill = category)) +
geom_col(show.legend = FALSE) +
ggtitle("French Fries") +
theme(plot.title = element_text(hjust = 0.5),  # Center the title
axis.title.x = element_blank()) +        # Remove x-axis label
ylab("Average Rating") +
scale_fill_manual(values = color_vector) +     # Set custom colors
coord_flip()                                  # Flip the coordinates
# Read the imdb_top_250.csv file
imdb_top_250 <- read_csv("data/imdb_top_250.csv")  # Replace with the correct path
# Load necessary libraries
library(tidyr)
library(tibble)
library(ggplot2)
library(dplyr)
library(readr)  # Load readr for read_csv function
library(RColorBrewer)
# Load french_fries data (assuming it is already available in the environment)
data(french_fries)
# Create tibble from french_fries data frame
ff <- as_tibble(french_fries)
# Pivot the data longer (from wide format to long format)
ff_long <- pivot_longer(ff, cols = potato:painty, names_to = "category", values_to = "amount")
# Group by category and calculate means, removing NA values
ff_summary <- ff_long %>%
group_by(category) %>%
summarize(mean_amount = mean(amount, na.rm = TRUE))
# Create a color vector for 5 categories
color_vector <- c("red", "blue", "green", "purple", "orange")
# Plot column chart without the legend, center title, and flip coordinates
ggplot(ff_summary, aes(x = reorder(category, -mean_amount), y = mean_amount, fill = category)) +
geom_col(show.legend = FALSE) +
ggtitle("French Fries") +
theme(plot.title = element_text(hjust = 0.5),  # Center the title
axis.title.x = element_blank()) +        # Remove x-axis label
ylab("Average Rating") +
scale_fill_manual(values = color_vector) +     # Set custom colors
coord_flip()                                  # Flip the coordinates
# Read the imdb_top_250.csv file
imdb_top_250 <- read_csv("data/imdb_top_250.csv")  # Replace with the correct path
# Plot histogram with 9 bins and colors from Color Brewer's Set1 palette
ggplot(imdb_top_250, aes(x = year, y = gross)) +
geom_histogram(stat = "identity", bins = 9, fill = brewer.pal(9, "Set1")) +
ggtitle("Top 250 Grossing Movies") +
theme(plot.title = element_text(hjust = 0.5),  # Center the title
panel.background = element_blank()) +    # Remove background
xlab("Year") +
ylab("Dollars in Millions")
imdb_top_250 <- read_csv("data/imdb_top_250.csv")
View(imdb_top_250)
print(colnames(imdb_top_250))
ggplot(imdb_top_250, aes(x = year)) +
geom_bar(fill = brewer.pal(9, "Set1"), color = "black") +  # Use geom_bar to plot count of movies per year
ggtitle("Top 250 Grossing Movies") +
theme(plot.title = element_text(hjust = 0.5),  # Center the title
panel.background = element_blank()) +    # Remove background
xlab("Year") +
ylab("Number of Movies")
# Load french_fries data (assuming it is already available in the environment)
data(french_fries)
# Create tibble from french_fries data frame
ff <- as_tibble(french_fries)
# Pivot the data longer (from wide format to long format)
ff_long <- pivot_longer(ff, cols = potato:painty, names_to = "category", values_to = "amount")
# Group by category and calculate means, removing NA values
ff_summary <- ff_long %>%
group_by(category) %>%
summarize(mean_amount = mean(amount, na.rm = TRUE))
# Create a color vector for 5 categories
color_vector <- c("red", "blue", "green", "purple", "orange")
# Plot column chart without the legend, center title, and flip coordinates
ggplot(ff_summary, aes(x = reorder(category, -mean_amount), y = mean_amount, fill = category)) +
geom_col(show.legend = FALSE) +
ggtitle("French Fries") +
theme(plot.title = element_text(hjust = 0.5),  # Center the title
axis.title.x = element_blank()) +        # Remove x-axis label
ylab("Average Rating") +
scale_fill_manual(values = color_vector) +     # Set custom colors
coord_flip()                                  # Flip the coordinates
# Read the imdb_top_250.csv file
imdb_top_250 <- read_csv("data/imdb_top_250.csv")  # Replace with the correct path
# Plot histogram with 9 bins and colors from Color Brewer's Set1 palette
ggplot(imdb_top_250, aes(x = year, y = gross)) +
geom_histogram(stat = "identity", bins = 9, fill = brewer.pal(9, "Set1")) +
ggtitle("Top 250 Grossing Movies") +
theme(plot.title = element_text(hjust = 0.5),  # Center the title
panel.background = element_blank()) +    # Remove background
xlab("Year") +
ylab("Dollars in Millions")
# Plot histogram with 9 bins and colors from Color Brewerâ€™s Set1 palette
ggplot(imdb_top_250, aes(x = year)) +
geom_histogram(bins = 9, fill = brewer.pal(9, "Set1"), color = "black") +  # Use 9 bins and color palette
ggtitle("Top 250 Grossing Movies") +
theme(plot.title = element_text(hjust = 0.5),  # Center the title
panel.background = element_blank()) +    # Remove background
xlab("Year") +
ylab("Dollars in Millions")  # Adjust label to reflect the nature of data
data(french_fries)
ff <- as_tibble(french_fries)
ff_long <- pivot_longer(ff, cols = potato:painty, names_to = "category", values_to = "amount")
ff_summary <- ff_long %>%
group_by(category) %>%
summarize(mean_amount = mean(amount, na.rm = TRUE))
color_vector <- c("red", "blue", "green", "purple", "orange")
ggplot(ff_summary, aes(x = reorder(category, -mean_amount), y = mean_amount, fill = category)) +
geom_col(show.legend = FALSE) +
ggtitle("French Fries") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank()) +
ylab("Average Rating") +
scale_fill_manual(values = color_vector) +
coord_flip()
imdb_top_250 <- read_csv("data/imdb_top_250.csv")
ggplot(imdb_top_250, aes(x = year)) +
geom_histogram(bins = 9, fill = brewer.pal(9, "Set1"), color = "black") +
ggtitle("Top 250 Grossing Movies") +
theme(plot.title = element_text(hjust = 0.5),
panel.background = element_blank()) +
xlab("Year") +
ylab("Dollars in Millions")
