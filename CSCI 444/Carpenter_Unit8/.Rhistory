# Load necessary libraries
library(tidyverse)
library(lubridate)
# Read the CSV file (replace 'weather_data.csv' with your actual file path)
weather_data <- read_csv("/dataweather_data.csv")
# Read the CSV file (replace 'weather_data.csv' with your actual file path)
weather_data <- read_csv("data/weather.csv")
# Step 1: Wrangle the data - Pivot to longer format
weather_long <- weather_data %>%
pivot_longer(cols = starts_with("d"), names_to = "day", values_to = "measure") %>%
mutate(day = str_remove(day, "d"))  # Remove "d" from the day column
# Step 2: Filter out wonky measure values
weather_long <- weather_long %>%
filter(!is.na(measure) & measure >= 0)  # Filter out invalid values
# Step 3: Create the date column
weather_long <- weather_long %>%
mutate(date = ymd(paste0(year, "-", month, "-", day)))  # Create date in yyyy-mm-dd format
# Step 4: Filter data for today's month and day
today_data <- weather_long %>%
filter(month(date) == month(today()) & day(date) == day(today()))
# Step 5: Calculate average rainfall for each year and remove duplicates
avg_rainfall <- today_data %>%
group_by(year) %>%
summarise(avg_rainfall = mean(measure, na.rm = TRUE)) %>%
distinct()
# Step 6: Plot the time series of average rainfall
ggplot(avg_rainfall, aes(x = year, y = avg_rainfall)) +
geom_line(color = "slateblue") +
labs(title = "Average Rainfall Over the Years",
x = "Year", y = "Average Rainfall") +
theme_minimal()
View(weather_data)
View(weather_data)
View(weather_long)
View(weather_long)
View(avg_rainfall)
View(today_data)
View(avg_rainfall)
View(today_data)
# Step 5: Calculate average rainfall for each year and remove duplicates
avg_rainfall <- today_data %>%
group_by(year, month, day) %>%
summarise(avg_rainfall = mean(measure, na.rm = TRUE)) %>%
distinct()
View(avg_rainfall)
# Step 6: Plot the time series of average rainfall
ggplot(avg_rainfall, aes(x = year, y = avg_rainfall)) +
geom_line(color = "slateblue") +
labs(title = "Average Rainfall Over the Years",
x = "Year", y = "Average Rainfall") +
theme_minimal()
