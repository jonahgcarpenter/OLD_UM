strip.text = element_text(size = 10),
legend.position = "top"          # Show legend at the top
)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidytext)
# Summarize the data to get the count of breweries by state and type, and then select top 5 per type
top_5_breweries <- usBreweries %>%
filter(!is.na(type)) %>%
group_by(state, type) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(type) %>%
arrange(desc(count)) %>%
slice_max(order_by = count, n = 5, with_ties = FALSE) %>%
ungroup()
# Plot with separate x-axis scales for each facet, showing top 5 for each type
ggplot(top_5_breweries, aes(x = count, y = reorder_within(state, count, type), fill = type)) +
geom_bar(stat = "identity") +
facet_wrap(~ type, scales = "free_x") +  # Separate x-axis scales for each type
scale_y_reordered() +
labs(
title = "Number of Breweries by State",
fill = "Number of US Breweries by State",
x = "Brewery Count"
) +
theme_minimal() +
theme(
axis.title.y = element_blank(),  # Remove y-axis label
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 7),
strip.text = element_text(size = 10),
legend.position = "top"          # Show legend at the top
)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidytext)
# Summarize the data to get the count of breweries by state and type, and then select the top 5 per type
top_5_breweries <- usBreweries %>%
filter(!is.na(type)) %>%
group_by(state, type) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(type) %>%
arrange(desc(count)) %>%
mutate(rank = row_number()) %>% # Add a rank within each type
filter(rank <= 5) %>% # Keep only the top 5 per type
ungroup()
# Plot with separate x-axis scales for each facet, showing top 5 for each type
ggplot(top_5_breweries, aes(x = count, y = reorder_within(state, count, type), fill = type)) +
geom_bar(stat = "identity") +
facet_wrap(~ type, scales = "free_x") +  # Separate x-axis scales for each type
scale_y_reordered() +
labs(
title = "Number of Breweries by State",
fill = "Number of US Breweries by State",
x = "Brewery Count"
) +
theme_minimal() +
theme(
axis.title.y = element_blank(),  # Remove y-axis label
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 7),
strip.text = element_text(size = 10),
legend.position = "top"          # Show legend at the top
)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidytext)
# Filter and find the top 5 states for each brewery type
top_5_breweries <- usBreweries %>%
filter(!is.na(type)) %>%
group_by(state, type) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(type) %>%
slice_max(order_by = count, n = 5) %>%
ungroup()
# Plot the top 5 states for each type
ggplot(top_5_breweries, aes(x = count, y = reorder_within(state, count, type), fill = type)) +
geom_bar(stat = "identity") +
facet_wrap(~ type, scales = "free_y") +
scale_y_reordered() +
labs(
title = "US Establishment of Breweries",
fill = "Number of US Breweries by State",
x = "Brewery Count"
) +
theme_minimal() +
theme(
axis.title.y = element_blank(),  # Remove y-axis label
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 7),
strip.text = element_text(size = 10),
legend.position = "top"          # Show legend at the top
)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidytext)
# Filter and find the top 5 states for each brewery type
top_5_breweries <- usBreweries %>%
filter(!is.na(type)) %>%
group_by(state, type) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(type) %>%
slice_max(order_by = count, n = 5) %>%
ungroup()
# Plot the top 5 states for each type
ggplot(top_5_breweries, aes(x = count, y = reorder_within(state, count, type), fill = type)) +
geom_bar(stat = "identity") +
facet_wrap(~ type, scales = "free_y") +
scale_y_reordered() +
labs(
title = "US Establishment of Breweries",
fill = "Number of US Breweries by State",
x = "Brewery Count"
) +
theme_minimal() +
theme(
axis.title.y = element_blank(),  # Remove y-axis label
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 7),
strip.text = element_text(size = 10),
legend.position = "top"          # Show legend at the top
)
# 15
top_5_breweries <- usBreweries %>%
filter(!is.na(type)) %>%
group_by(state, type) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(type) %>%
slice_max(order_by = count, n = 5) %>%
ungroup()
ggplot(top_5_breweries, aes(x = count, y = reorder_within(state, count, type), fill = type)) +
geom_bar(stat = "identity") +
facet_wrap(~ type, scales = "free_y") +
scale_y_reordered() +
labs(
title = "US Establishment of Breweries",
fill = "Number of US Breweries by State",
x = "Brewery Count"
) +
theme_minimal() +
theme(
axis.title.y = element_blank(),  # Remove y-axis label
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 7),
strip.text = element_text(size = 10),
legend.position = "top"          # Show legend at the top
)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidytext)
# Filter and find the top 5 states for each brewery type
top_5_breweries <- usBreweries %>%
filter(!is.na(type)) %>%
group_by(state, type) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(type) %>%
slice_max(order_by = count, n = 5) %>%
ungroup()
# Plot the top 5 states for each type with separate x-axis scales
ggplot(top_5_breweries, aes(x = count, y = reorder_within(state, count, type), fill = type)) +
geom_bar(stat = "identity") +
facet_wrap(~ type, scales = "free_x") +  # Separate x-axis scales for each type
scale_y_reordered() +
labs(
title = "US Establishment of Breweries",
fill = "Number of US Breweries by State",
x = "Brewery Count"
) +
theme_minimal() +
theme(
axis.title.y = element_blank(),  # Remove y-axis label
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 7),
strip.text = element_text(size = 10),
legend.position = "top"          # Show legend at the top
)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidytext)
# Filter and find the top 5 states for each brewery type, excluding those with zero count
top_5_breweries <- usBreweries %>%
filter(!is.na(type)) %>%
group_by(state, type) %>%
summarise(count = n(), .groups = "drop") %>%
filter(count > 0) %>%  # Exclude entries with zero count
group_by(type) %>%
slice_max(order_by = count, n = 5) %>%
ungroup()
# Plot the top 5 states for each type with separate x-axis scales
ggplot(top_5_breweries, aes(x = count, y = reorder_within(state, count, type), fill = type)) +
geom_bar(stat = "identity") +
facet_wrap(~ type, scales = "free_x") +  # Separate x-axis scales for each type
scale_y_reordered() +
labs(
title = "US Establishment of Breweries",
fill = "Number of US Breweries by State",
x = "Brewery Count"
) +
theme_minimal() +
theme(
axis.title.y = element_blank(),  # Remove y-axis label
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 7),
strip.text = element_text(size = 10),
legend.position = "top"          # Show legend at the top
)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidytext)
# Filter and find the top 5 states for each brewery type, excluding those with empty values or zero count
top_5_breweries <- usBreweries %>%
filter(
!is.na(type),
state != "",
count > 0  # Exclude entries with zero count or empty state
) %>%
group_by(state, type) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(type) %>%
slice_max(order_by = count, n = 5) %>%
ungroup()
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidytext)
# Summarize and filter the data to get the count of breweries by state and type, then select top 5
top_5_breweries <- usBreweries %>%
filter(!is.na(type), state != "") %>%  # Remove empty 'state' values before grouping
group_by(state, type) %>%
summarise(count = n(), .groups = "drop") %>%
filter(count > 0) %>%  # Filter out entries with zero counts after summarising
group_by(type) %>%
slice_max(order_by = count, n = 5) %>%
ungroup()
# Plot the top 5 states for each type with separate x-axis scales
ggplot(top_5_breweries, aes(x = count, y = reorder_within(state, count, type), fill = type)) +
geom_bar(stat = "identity") +
facet_wrap(~ type, scales = "free_x") +  # Separate x-axis scales for each type
scale_y_reordered() +
labs(
title = "US Establishment of Breweries",
fill = "Number of US Breweries by State",
x = "Brewery Count"
) +
theme_minimal() +
theme(
axis.title.y = element_blank(),  # Remove y-axis label
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 7),
strip.text = element_text(size = 10),
legend.position = "top"          # Show legend at the top
)
# 15
top_5_breweries <- usBreweries %>%
filter(!is.na(type)) %>%
group_by(state, type) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(type) %>%
slice_max(order_by = count, n = 5) %>%
ungroup()
ggplot(top_5_breweries, aes(x = count, y = reorder_within(state, count, type), fill = type)) +
geom_bar(stat = "identity") +
facet_wrap(~ type, scales = "free_x") +
scale_y_reordered() +
labs(
title = "US Establishment of Breweries",
fill = "Number of US Breweries by State",
x = "Brewery Count"
) +
theme_minimal() +
theme(
axis.title.y = element_blank(),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 7),
strip.text = element_text(size = 10),
legend.position = "top"
)
# 14
breweries_by_state_type <- usBreweries %>%
filter(!is.na(type)) %>%
group_by(state, type) %>%
summarise(count = n(), .groups = "drop")
# Plot the data with facets by type, each on its own scale and in descending order
ggplot(breweries_by_state_type, aes(x = count, y = reorder_within(state, count, type), fill = type)) +
geom_bar(stat = "identity") +
facet_wrap(~ type, scales = "free_y") +
scale_y_reordered() +
labs(
title = "Number of Breweries by State"
) +
theme_minimal() +
theme(
axis.title = element_blank(),          # Remove x and y axis titles
axis.text.x = element_text(size = 8),  # Adjust x-axis tick text size
axis.text.y = element_text(size = 7),  # Adjust y-axis tick text size
strip.text = element_text(size = 10),  # Adjust facet labels
legend.position = "none"               # Remove the legend
)
# Plot the data with facets by type, each on its own scale and in descending order
ggplot(breweries_by_state_type, aes(x = count, y = reorder_within(state, count, type), fill = type)) +
geom_bar(stat = "identity") +
facet_wrap(~ type, scales = "free_x") +
scale_y_reordered() +
labs(
title = "Number of Breweries by State"
) +
theme_minimal() +
theme(
axis.title = element_blank(),          # Remove x and y axis titles
axis.text.x = element_text(size = 8),  # Adjust x-axis tick text size
axis.text.y = element_text(size = 7),  # Adjust y-axis tick text size
strip.text = element_text(size = 10),  # Adjust facet labels
legend.position = "none"               # Remove the legend
)
# Plot the data with facets by type, each on its own scale and in descending order
ggplot(breweries_by_state_type, aes(x = count, y = reorder_within(state, count, type), fill = type)) +
geom_bar(stat = "identity") +
facet_wrap(~ type, scales = "free_y") +
scale_y_reordered() +
labs(
title = "Number of Breweries by State"
) +
theme_minimal() +
theme(
axis.title = element_blank(),          # Remove x and y axis titles
axis.text.x = element_text(size = 8),  # Adjust x-axis tick text size
axis.text.y = element_text(size = 7),  # Adjust y-axis tick text size
strip.text = element_text(size = 10),  # Adjust facet labels
legend.position = "none"               # Remove the legend
)
ggplot(top_5_breweries, aes(x = count, y = reorder_within(state, count, type), fill = type)) +
geom_bar(stat = "identity") +
facet_wrap(~ type, scales = "free") +
scale_y_reordered() +
labs(
title = "US Establishment of Breweries",
fill = "Number of US Breweries by State",
x = "Brewery Count"
) +
theme_minimal() +
theme(
axis.title.y = element_blank(),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 7),
strip.text = element_text(size = 10),
legend.position = "top"
)
# Plot the data with facets by type, each on its own scale and in descending order
ggplot(breweries_by_state_type, aes(x = count, y = reorder_within(state, count, type), fill = type)) +
geom_bar(stat = "identity") +
facet_wrap(~ type, scales = "free") +
scale_y_reordered() +
labs(
title = "Number of Breweries by State"
) +
theme_minimal() +
theme(
axis.title = element_blank(),          # Remove x and y axis titles
axis.text.x = element_text(size = 8),  # Adjust x-axis tick text size
axis.text.y = element_text(size = 7),  # Adjust y-axis tick text size
strip.text = element_text(size = 10),  # Adjust facet labels
legend.position = "none"               # Remove the legend
)
ggplot(top_5_breweries, aes(x = count, y = reorder_within(state, count, type), fill = type)) +
geom_bar(stat = "identity") +
facet_wrap(~ type, scales = "free") +
scale_y_reordered() +
labs(
title = "US Establishment of Breweries",
fill = "Number of US Breweries by State",
x = "Brewery Count"
) +
theme_minimal() +
theme(
axis.title.y = element_blank(),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 7),
strip.text = element_text(size = 10),
legend.position = "top"
)
# MS
# 1
ms_2024$type <- case_when(
grepl("_Brewery$", ms_2024$names) ~ "Brewery",
grepl("_Meadery$", ms_2024$names) ~ "Meadery",
grepl("_Cidery$", ms_2024$names) ~ "Cidery",
grepl("_Sake$", ms_2024$names) ~ "Sake"
)
brewery_counts <- ms_2024 %>%
group_by(type) %>%
summarise(count = n()) %>%
arrange(desc(count))
ggplot(brewery_counts, aes(x = reorder(type, -count), y = count, fill = type)) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip the axes
labs(title = "Mississippi Breweries by Type", fill = "Type") +
theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "top"
)
ggplot(brewery_group_counts, aes(x = reorder(groups, -count), y = count, fill = groups)) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip the axes
labs(title = "Mississippi Brewery Groups", fill = "Brewery") +
theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "top"
)
ggplot(brewery_year_counts, aes(x = factor(established), y = count, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Mississippi Breweries, Meaderies, Cideries and Sake Producers by Year",
fill = "Breweries",
x = "Year Established",
y = "Number"
) +
theme_minimal() +
scale_x_discrete(limits = 2003:2024)
view(brewery_year_counts)
ggplot(brewery_summary, aes(x = type, y = count, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ status, scales = "free_y") +
labs(
title = "US Breweries by Type",
fill = "Brewery",
x = "Brewery Type",
y = "Number"
) +
theme_minimal() +
theme(legend.position = "top")
ggplot(brewery_groups_summary, aes(x = reorder(groups, -count), y = count, fill = groups)) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip the axes
labs(
title = "US Brewery Groups",
fill = "Brewery"
) +
theme_minimal() +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "top"
)
View(brewery_groups_summary)
ggplot(establishment_trends, aes(x = established, y = count, color = type)) +
geom_line(size = 1) +
geom_point(size = 2) +
labs(
title = "US Establishment of Breweries",
color = "Brewery",
x = "Year",
y = "Number Established"
) +
theme_minimal() +
theme(legend.position = "top")
view(establishment_trends)
ggplot(recent_establishment_trends, aes(x = established, y = count, color = type)) +
geom_line(size = 1) +
geom_point(size = 2) +
labs(
title = "US Establishment of Breweries",
color = "Brewery",
x = "Year",
y = "Number Established"
) +
theme_minimal() +
theme(legend.position = "top")
view(recent_establishment_trends)
ggplot(breweries_by_state_type, aes(x = count, y = reorder_within(state, count, type), fill = type)) +
geom_bar(stat = "identity") +
facet_wrap(~ type, scales = "free") +
scale_y_reordered() +
labs(
title = "Number of Breweries by State"
) +
theme_minimal() +
theme(
axis.title = element_blank(),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 7),
strip.text = element_text(size = 10),
legend.position = "none"
)
ggplot(top_5_breweries, aes(x = count, y = reorder_within(state, count, type), fill = type)) +
geom_bar(stat = "identity") +
facet_wrap(~ type, scales = "free") +
scale_y_reordered() +
labs(
title = "US Establishment of Breweries",
fill = "Number of US Breweries by State",
x = "Brewery Count"
) +
theme_minimal() +
theme(
axis.title.y = element_blank(),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 7),
strip.text = element_text(size = 10),
legend.position = "top"
)
view(no_city_entries)
